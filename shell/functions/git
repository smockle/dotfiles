#!/usr/bin/env bash

git() {
  command=$1
  shift 1
  case $command in

  # Create a new branch with the same name if one does not exist,
  # safer than `git config --global push.default current`.
  "push")
    BRANCH_NAME=$(command git rev-parse --abbrev-ref HEAD)
    if [[ -z $(command git config "branch.$BRANCH_NAME.merge") && -z "$@" ]]; then
      command git push --set-upstream origin "$BRANCH_NAME"
    elif [[ -z $(command git config "branch.$BRANCH_NAME.merge") ]]; then
      command git push --set-upstream "$@"
    else
      command git push "$@"
    fi
  ;;

  "diff")
    if command -v diff-so-fancy; then
      command git diff --color "$@" | diff-so-fancy
    else
      command git diff --color "$@"
    fi
  ;;

  "branch")
    subcommand=$1
    if [ "$subcommand" == "prune" ]; then
      # Remove merged branches
      command git branch --merged | egrep -v "(^\*|master|develop)" | xargs command git branch -D
      # Remove squash-merged branches
      command git fetch -a && command git branch -v | grep '\[gone\]' | cut -f3 -d' ' | xargs command git branch -D
    else
      command git branch "$@"
    fi
  ;;

  *)
    command git "${command}" "$@"
  ;;
  
  esac
  return $?
}
