#!/usr/bin/env bash

git() {
  command=$1
  shift 1

  # Create a new branch with the same name if one does not exist,
  # safer than `git config --global push.default current`.
  BRANCH_NAME=$(command "git" rev-parse --abbrev-ref HEAD)
  if [ "${command}" == "push" ] && \
     [ -z "$(command "git" config "branch.${BRANCH_NAME}.merge")" ]
  then
    # shellcheck disable=SC2068
    command "git" push --set-upstream ${@:-$(a=(origin "${BRANCH_NAME}"); echo "${a[@]}")}
    unset BRANCH_NAME
    return $?
  fi
  unset BRANCH_NAME

  # Remove merged & squash-merged branches
  if [ "${command}" == "branch" ] && \
     [ "${1}" == "prune" ]
  then
    command "git" branch --merged | grep -E -v "(^\*|master|develop)" | xargs command "git" branch -D
    command "git" fetch -a && command "git" branch -v | grep '\[gone\]' | cut -f3 -d' ' | xargs command "git" branch -D
    return $?
  fi

  command "git" "${command}" "$@"
  return $?
}
